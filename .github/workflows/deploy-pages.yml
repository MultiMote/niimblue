name: Deploy project to Github Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.repository == 'MultiMote/niimblue'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: yarn
          cache-dependency-path: ./yarn.lock

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: yarn install

      - name: Check code
        run: yarn sv-check

      - name: Build
        run: yarn vite build --base="${{ steps.pages.outputs.base_path || '/' }}"
        env:
          COMMIT_HASH: ${{github.sha}}

      - name: Generate Sitemap
        run: |
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
          <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">
            <url>
              <loc>$PAGE_URL</loc>
              <lastmod>$LAST_MODIFIED</lastmod>
            </url>
          </urlset>" > ./dist/sitemap.xml
        env:
          PAGE_URL: ${{ steps.pages.outputs.origin }}
          LAST_MODIFIED: ${{ github.event.repository.updated_at }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    if: github.repository == 'MultiMote/niimblue'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
